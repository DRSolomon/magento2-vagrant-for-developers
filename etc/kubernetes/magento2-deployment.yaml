# The following code is for creating single-instance of magento2 Deployment and Service
apiVersion: v1
kind: Service
metadata:
  name: magento2
  labels:
    app: magento2
spec:
  ports:
  - port: 80
    nodePort: 30101
  selector:
    app: magento2
    tier: frontend
  type: NodePort #any service of type NodePort can be accessed over that IP address
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      client_max_body_size 200M;
      gzip  on;
      fastcgi_read_timeout 30000s;

      upstream fastcgi_backend {
        server 127.0.0.1:9000;
      }

      server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;
        set $MAGE_ROOT /var/www/html/magento;
        include /var/www/persistent/magento/nginx.conf.sample;
      }
    }
---
#This it to deploy magento2 container to Kubernetes
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: magento2-monolith
  labels:
    app: magento2
spec:
  selector:
    matchLabels:
      app: magento2
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: magento2
        tier: frontend
    spec:
      containers:
      - name: magento2
      # TODO: Image hardcoded to local version
        image: magento2-monolith:dev
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code-slow
          mountPath: /var/www/persistent-slow
        - name: code
          mountPath: /var/www/persistent
        - name: memory
          mountPath: /var/www/html
        resources:
          limits:
            memory: 2000Mi
          requests:
            memory: 1500Mi

      - name: nginx
        image: nginx:1.9
        volumeMounts:
        - name: code
          mountPath: /var/www/persistent
        - name: memory
          mountPath: /var/www/html
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
# NFS
      - name: code
        persistentVolumeClaim:
          claimName: sources-volume-claim

# Shared folders
      - name: code-slow
        hostPath:
          path: {{PWD}}

      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: memory
        emptyDir:
          medium: Memory
          sizeLimit: 1000Mi
